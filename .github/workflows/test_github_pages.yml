name: Test GitHub Pages After Deployment

on:
  deployment_status:
  workflow_dispatch:
    inputs:
      deployment_url:
        description: 'GitHub Pages URL to test'
        required: false
        default: 'https://ragedunicorn.github.io/wow-classic-pvpwarn-vpnfc/'

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event.deployment_status.state == 'success' &&
       github.event.deployment.environment == 'github-pages')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Wait for GitHub Pages to be accessible
        run: |
          URL="${{ steps.set-url.outputs.url }}"
          echo "Waiting for GitHub Pages to be accessible at: $URL"
          
          # Maximum wait time: 10 minutes (40 attempts * 15 seconds)
          MAX_ATTEMPTS=40
          DELAY=15
          
          for i in $(seq 1 $MAX_ATTEMPTS); do
            echo "Attempt $i/$MAX_ATTEMPTS..."
            
            # Check if the page returns a successful status code and correct content
            HTTP_CODE=$(curl -s -o /tmp/page_content.html -w "%{http_code}" "$URL")
            
            if [ "$HTTP_CODE" = "200" ]; then
              # Check if it's not the GitHub 404 page
              if ! grep -q "There isn't a GitHub Pages site here" /tmp/page_content.html; then
                # Check if it contains expected content
                if grep -q "PVPWarn Voice Pack" /tmp/page_content.html; then
                  echo "✅ GitHub Pages is accessible and showing correct content!"
                  exit 0
                else
                  echo "⚠️ Page returns 200 but doesn't contain expected content"
                fi
              else
                echo "⚠️ Page returns 200 but shows GitHub 404 page"
              fi
            else
              echo "⚠️ HTTP status code: $HTTP_CODE"
            fi
            
            if [ $i -lt $MAX_ATTEMPTS ]; then
              echo "Waiting ${DELAY}s before next attempt..."
              sleep $DELAY
            fi
          done
          
          echo "❌ ERROR: GitHub Pages did not become accessible after $((MAX_ATTEMPTS * DELAY)) seconds"
          echo "Final page content:"
          cat /tmp/page_content.html
          exit 1

      - name: Set GitHub Pages URL
        id: set-url
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "url=${{ github.event.inputs.deployment_url }}" >> $GITHUB_OUTPUT
          else
            # For deployment_status events, construct the URL from repository info
            echo "url=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_OUTPUT
          fi
      
      - name: Run Playwright tests
        run: |
          echo "Testing GitHub Pages at: ${{ steps.set-url.outputs.url }}"
          npm test
        env:
          GITHUB_PAGES_URL: ${{ steps.set-url.outputs.url }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          retention-days: 7
